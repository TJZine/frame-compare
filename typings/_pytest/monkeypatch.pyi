from os import PathLike
from collections.abc import MutableMapping
from typing import Any


class MonkeyPatch:
    def setattr(self, target: object, name: str, value: object, *, raising: bool = ...) -> None: ...
    def delattr(self, target: object, name: str, raising: bool = ...) -> None: ...
    def delenv(self, name: str, raising: bool = ...) -> None: ...
    def setenv(self, name: str, value: str, *, prepend: bool = ...) -> None: ...
    def setitem(self, mapping: MutableMapping[Any, Any], name: Any, value: Any) -> None: ...
    def getenv(self, name: str, default: str | None = ...) -> str | None: ...
    def chdir(self, path: str | PathLike[str]) -> None: ...
    def undo(self) -> None: ...
