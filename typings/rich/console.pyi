from typing import Any, ContextManager, Iterable


class ConsoleCapture(ContextManager[str]):
    def get(self) -> str: ...
    def __enter__(self) -> str: ...
    def __exit__(self, exc_type, exc, tb) -> None: ...


class Console:
    width: int

    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def print(self, *objects: Any, **kwargs: Any) -> None: ...
    def rule(self, title: str | None = ..., **kwargs: Any) -> None: ...
    def log(self, *objects: Any, **kwargs: Any) -> None: ...
    def capture(self) -> ConsoleCapture: ...
    def export_text(self, *, clear: bool = ...) -> str: ...
